<?php

/**
 * @file
 * File for the Cloudinary SDK module.
 */
use Drupal\Core\Url;

/**
 * Required minimum version number of "CLOUDINARY SDK for PHP".
 */
define('CLOUDINARY_SDK_MINIMUM_VERSION', '1.0.7');

/**
 * Flag for dealing with "CLOUDINARY SDK for PHP" not loaded.
 */
define('CLOUDINARY_SDK_NOT_LOADED', 0);

/**
 * Flag for dealing with "CLOUDINARY SDK for PHP" old version.
 */
define('CLOUDINARY_SDK_OLD_VERSION', 1);

/**
 * Flag for dealing with "CLOUDINARY SDK for PHP" loaded.
 */
define('CLOUDINARY_SDK_LOADED', 2);

/**
 * Cloudinary configuration initialization.
 */
function cloudinary_sdk_init($config = array()) {
  if (empty($config)) {
    $config = cloudinary_sdk_config_load();
  }

  if (!empty($config)) {
    \Cloudinary::config($config);
    return TRUE;
  }

  return FALSE;
}

/**
 * Load the cloudinary api settings from variables.
 *
 * @return array
 *   API configuration of cloudinary.
 */
function cloudinary_sdk_config_load() {
  $config = array();

  $cloud_name = \Drupal::config('cloudinary_sdk.settings')->get('cloudinary_sdk_cloud_name');
  $api_key = \Drupal::config('cloudinary_sdk.settings')->get('cloudinary_sdk_api_key');
  $api_secret = \Drupal::config('cloudinary_sdk.settings')->get('cloudinary_sdk_api_secret');

  if ($cloud_name && $api_key && $api_secret) {
    $config = array(
      'cloud_name' => $cloud_name,
      'api_key' => $api_key,
      'api_secret' => $api_secret,
    );
  }

  return $config;
}

/**
 * The status of "CLOUDINARY SDK for PHP".
 */
function cloudinary_sdk_check($ver = FALSE) {
  $status = $version = '';
  $error_message = '';
  $version = '';

  if (!class_exists('\Cloudinary')) {
    $status = CLOUDINARY_SDK_NOT_LOADED;
    $error_message = 'Cloudinary SDK not found';
  }
  elseif (\Cloudinary::VERSION && version_compare(\Cloudinary::VERSION, CLOUDINARY_SDK_MINIMUM_VERSION) < 0) {
    $status = CLOUDINARY_SDK_OLD_VERSION;
    $version = \Cloudinary::VERSION;
  }
  else {
    $status = CLOUDINARY_SDK_LOADED;
    $version = \Cloudinary::VERSION;
  }

  return $ver ? array($status, $version, $error_message) : $status;
}

/**
 * Implements hook_help().
 */
function cloudinary_sdk_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {

  $logo = array(
    '#theme' => 'image',
    '#uri' => drupal_get_path('module', 'cloudinary_sdk') . '/images/logo.png',
    '#alt' => 'Cloudinary Logo',
    '#width' => '344',
    '#height' => '76',
  );
  $logo_image = drupal_render($logo);

  $api = array(
    '#theme' => 'image',
    '#uri' => drupal_get_path('module', 'cloudinary_sdk') . '/images/api.png',
    '#alt' => 'Cloudinary Logo',
    '#width' => '600',
    '#height' => '249',
  );
  $api_image = drupal_render($api);


  $output = '';

  switch ($route_name) {
    case 'help.page.cloudinary_sdk':
      $output .= '<p>' . \Drupal::l($logo_image, Url::fromUri('http://www.cloudinary.com/'), array('html' => TRUE)) . '</p>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t("Image upload - Securely upload images or any other file, at any scale from any source. API for fast upload directly from your user's browsers or mobile apps.") . '</li>';
      $output .= '<li>' . t('Cloud storage - Store as many images as needed. Our image hosting service stores images privately and safely with automatic backup and historical revisions.') . '</li>';
      $output .= '<li>' . t('Powerful administration - Manage your media library interactively with our Digital Asset Management solution or via APIs. Gain insights using advanced analytics.') . '</li>';
      $output .= '<li>' . t('Image manipulation - Manipulate your images dynamically to fit any graphics design. Apply effects, resizing, cropping, face detection, watermarks and tons of image processing capabilities.') . '</li>';
      $output .= '<li>' . t("Fast delivery - Get your images delivered lightning-fast, responsive and highly optimized for any device in any location. Images are served via Akamai's worldwide CDN.") . '</li>';
      $output .= '</ul>';
      break;

    case 'cloudinary_sdk.settings':
      $output .= '<p>' . \Drupal::l($logo_image, Url::fromUri('http://www.cloudinary.com/'), array('html' => TRUE)) . '</p>';
      $output .= '<h3>' . t('API account') . '</h3>';
      $output .= '<p>' . t('You can get the correct cloud name, API key and API secret on your account page.') . '</p>';
      $output .= '<p>' . \Drupal::l($api_image, Url::fromUri('http://www.cloudinary.com/console'), array('html' => TRUE)) . '</p>';
      break;
  }

  return $output;
}

/**
 * Implements hook_menu().
 */
function cloudinary_sdk_menu() {
  $items = array();

  $items['admin/config/media/cloudinary'] = array(
    'title' => 'Cloudinary',
    'description' => 'Configure Cloudinary API account and settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloudinary_sdk_settings'),
    'access arguments' => array('administer cloudinary'),
    'file' => 'cloudinary_sdk.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function cloudinary_sdk_permission() {
  return array(
    'administer cloudinary' => array(
      'title' => t('Administer cloudinary and cloudinary settings'),
    ),
  );
}
